"use strict";
var customFields = {
		schoolnumber : ""
	},
	customData = [],
	User = module.parent.require("./user"),
	Password = module.parent.require("./password"),
	utils = module.parent.require("../public/src/utils"),
	db = module.parent.require('./database'),
	passport = module.parent.require("passport"),
	passportLocal = module.parent.require('passport-local').Strategy,
	nconf = module.parent.require("nconf"),
	request = module.parent.require("request"),
	async = module.parent.require("async"),
	meta = module.parent.require('./meta'),
	CASAuthentication = module.parent.require('cas-authentication'),
	const_pwd = nconf.get("const_pwd"),
	plugin = {};

	var cas = new CASAuthentication({
		cas_url     : 'https://uis.nwpu.edu.cn/cas',
		service_url : 'http://fermion.space',
		cas_version : '2.0'
	});

plugin.load = function(arg, next) {
	var app = arg.app;
	var router = arg.router;
	var middleware = arg.middleware;
	var controllers = arg.controllers;

	router.get( '/authenticate', cas.bounce, function ( req, response ) {
		plugin.getUidBySchoolnumber(schoolnumber, function(err, uid) {
			console.log(uid);
			if (uid !== null) {// 已经注册过， 直接登录
				passport.use(new passportLocal({passReqToCallback: true}, plugin.continueLogin));
			}else {// 没有学号，开启注册
				response.redirect(nconf.get('relative_path') + '/register');
			}
		});
	});

	router.get( '/api/user', cas.block, function ( req, res ) {
		res.json( { cas_user: req.session[ cas.session_name ] } );
	});

	// 退出登录
	router.get('/logout', cas.logout);

	//App 登录接口
	router.post("/user/login", controllers.authentication.login);

	//通过token登录
	router.get("/user/login", controllers.authentication.login);
	app.use(router);

};

plugin.continueLogin = function(req, username, password, next) {
	var schoolnumber = req.session[cas.session_name];
	console.log(schoolnumber);
	plugin.moreLogin(uid, function(err, user) {
		if (err) {
		  return next(err);
		}
		next(null, user);
	});
}

plugin.moreLogin = function(schoolnumber, callback) {
	plugin.getUidBySchoolnumber(schoolnumber, function(err, uid) {
		if (err) {
			return callback(err);
		}
		if (uid !== null) {
			// Existing User
			callback(null, {
				uid: uid
			});
		}
	});
}

plugin.getUidBySchoolnumber = function(schoolnumber, callback) {
	db.getObjectField('schoolnumber:uid', schoolnumber, function(err, uid) {
		if (err) {
			return callback(err);
		}
		callback(null, uid);
	});
};

plugin.auth = function() {
	passport.use(new passportLocal({
		passReqToCallback: true
	}, signinWithCode));
};

plugin.customHeaders = function(headers, callback) {
	for(var key in customFields) {

		switch(key) {
			case 'schoolnumber':
				var label = "学号/工号";
				break;
		}

		headers.headers.push({
			label: label
		});
	}

	callback(null, headers);
};

plugin.customFields = function(params, callback) {
	var users = params.users.map(function(user) {

		if (!user.customRows) {
			user.customRows = [];

			for(var key in customFields) {
				user.customRows.push({value: customFields[key]});
			}
		}

		return user;
	});

	callback(null, {users: users});
};

plugin.addField = function(params, callback) {
	for(var key in customFields) {

		if (key == "") {
			callback(null, params);
			return;
		}

		switch(key) {
			case 'schoolnumber':
				var html = '<input class="form-control" type="text" name="schoolnumber" id="schoolnumber" value="2017" placeholder="输入学号/工号"><span class="custom-feedback" id="schoolnumber-notify"></span>';
				var label = "学号/工号";
				break;
		}

		var captcha = {
			label: label,
			html: html
		};

		if (params.templateData.regFormEntry && Array.isArray(params.templateData.regFormEntry)) {
			params.templateData.regFormEntry.push(captcha);
		} else {
			params.templateData.captcha = captcha;
		}
	}

	callback(null, params);
};

plugin.checkField = function(params, callback) {
	var userData = params.userData;
	var error = null;

	for(var key in customFields) {

		var value = userData[key];

		// console.log(params);
		var schoolnumber = params.req.session[cas.session_name];

		if (value == "" || value == undefined || value != schoolnumber) {
			error = {message: '学号/工号错误'};
		}

		plugin.getUidBySchoolnumber(schoolnumber, function(err, uid) {
			if (err) {
				console.log('register schoolnumber checkField failed');
				return callback(err);
			}

			if (uid !== null) {
				console.log("xxxxxxxxxxxxxxxx"+ uid);
				error = {message: '学号/工号已被注册'};
			}
		});

	}

	callback(error, params);
};

plugin.creatingUser = function(params, callback) {
	// console.log(params.data);
	// customData.push(params.data['schoolnumber']);
	params.user['schoolnumber'] = params.data['schoolnumber'];
	// console.log(params.data);
	callback(null, params);
};

plugin.createdUser = function(params) {
	/*
	var addCustomData = {
		schoolnumber : customData[0]
	}

	console.log(addCustomData);

	var keyID = 'user:' + params.user.uid + ':ns:custom_fields';

	db.setObject(keyID, addCustomData, function(err) {
		if (err) {
			return callback(err);
		}
		console.log(keyID);
	});
	*/
	console.log(params);
	var uid = params.user.uid;
	var schoolnumber = params.user.schoolnumber;
	User.setUserField(uid, 'schoolnumber', schoolnumber);
	db.setObjectField('schoolnumber:uid', schoolnumber, uid);
};

plugin.addToApprovalQueue = function(params, callback) {
	var data = params.data;
	var userData = params.userData;

	data.customRows = [];

	for (var key in customFields) {

		switch(key) {
			case 'schoolnumber':
				var fieldData = params.userData['schoolnumber'];
				break;
		}

		customFields[key] = fieldData;
		data.customRows.push({value: customFields[key]});
	}

	callback(null, {data: data, userData: userData});
};

module.exports = plugin;